{"version":3,"sources":["SeasonDisplay.js","Spinner.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","className","Spinner","message","defaultProps","App","state","errorMessage","console","log","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","this","renderContent","React","Component","ReactDOM","render","document","querySelector"],"mappings":"sMAIMA,G,MAAe,CACpBC,OAAQ,CACPC,KAAM,sBACNC,SAAU,OAEXC,OAAQ,CACPF,KAAM,qBACNC,SAAU,eA2BGE,EAdO,SAACC,GACtB,IAVkBC,EAAKC,EAUjBC,GAVYF,EAUOD,EAAMC,KAVRC,GAUa,IAAIE,MAAOC,YATtC,GAAKH,EAAO,EACbD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAKG,EAELP,EAAaS,GAAhCP,EAFwB,EAExBA,KAAMC,EAFkB,EAElBA,SAEd,OACA,yBAAKS,UAAS,yBAAoBH,IACjC,uBAAGG,UAAS,4BAAuBT,EAAvB,WACZ,4BAAKD,GACL,uBAAGU,UAAS,6BAAwBT,EAAxB,aC9BRU,EAAU,SAACP,GAChB,OACC,yBAAKM,UAAU,oBACX,yBAAKA,UAAU,sBAAsBN,EAAMQ,WAKjDD,EAAQE,aAAe,CACtBD,QAAS,aAGKD,QCTTG,E,2MAGLC,MAAQ,CAAEV,IAAK,KAAMW,aAAc,I,mFAEd,IAAD,OACnBC,QAAQC,IAAI,2CACZC,OAAOC,UAAUC,YAAYC,oBAC5B,SAAAC,GAAQ,OAAI,EAAKC,SAAS,CAAEnB,IAAKkB,EAASE,OAAOC,cACjD,SAAAC,GAAG,OAAI,EAAKH,SAAS,CAAER,aAAcW,EAAIf,e,2CAK1CK,QAAQC,IAAI,8C,sCAIZ,OAAIU,KAAKb,MAAMC,eAAiBY,KAAKb,MAAMV,IACnC,uCAAauB,KAAKb,MAAMC,eAG3BY,KAAKb,MAAMC,cAAgBY,KAAKb,MAAMV,IACnC,kBAAC,EAAD,CAAeA,IAAKuB,KAAKb,MAAMV,MAGhC,kBAAC,EAAD,CAASO,QAAQ,qC,+BAOxB,OAAO,yBAAKF,UAAU,cAAckB,KAAKC,qB,GAjCzBC,IAAMC,WAsCxBC,IAASC,OAAQ,kBAAC,EAAD,MAASC,SAASC,cAAc,W","file":"static/js/main.349524b3.chunk.js","sourcesContent":["import './SeasonDisplay.css'\r\nimport React from 'react';\r\n\r\n\r\nconst seasonConfig = {\r\n\tsummer: {\r\n\t\ttext: 'Lets hit the beach!',\r\n\t\ticonName: 'sun'\r\n\t},\r\n\twinter: {\r\n\t\ttext: 'Burr, it is chilly',\r\n\t\ticonName: 'snowflake'\r\n\t}\r\n};\r\n\r\nconst getSeason = (lat, month) => {\t\r\n\tif(month>2 && month <9){\r\n\t\treturn lat > 0 ? 'summer' : 'winter';\r\n\t} else{\r\n\t\treturn lat < 0 ? 'summer' : 'winter';\r\n\t}\r\n\t\r\n};\r\n\r\nconst SeasonDisplay = (props) => {\r\n\tconst season = getSeason(props.lat, new Date().getMonth());\r\n\tconst { text, iconName } = seasonConfig[season]; // {text, iconName}\r\n\r\n\treturn( \r\n\t<div className={`season-display ${season}`}>\r\n\t\t<i className={`icon-left massive ${iconName} icon`} />\r\n\t\t<h1>{text}</h1>\r\n\t\t<i className={`icon-right massive ${iconName} icon`} />\r\n\t</div>\r\n\t);\r\n\r\n};\r\n\r\nexport default SeasonDisplay;","import React from 'react';\r\n\r\nconst Spinner = (props) => {\r\n\treturn (\r\n\t\t<div className=\"ui active dimmer\">\r\n\t\t    <div className=\"ui big text loader\">{props.message}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nSpinner.defaultProps = {\r\n\tmessage: 'Loading..'\r\n};\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SeasonDisplay from './SeasonDisplay';\r\nimport Spinner from './Spinner';\r\n\r\nclass App extends React.Component {\r\n\r\n\r\n\tstate = { lat: null, errorMessage: '' };\r\n\r\n\tcomponentDidMount() {\r\n\t\tconsole.log('My component was rendered to the screen');\r\n\t\twindow.navigator.geolocation.getCurrentPosition(\r\n\t\t\tposition => this.setState({ lat: position.coords.latitude }), \r\n\t\t\terr => this.setState({ errorMessage: err.message })\r\n\t\t);\r\n\t}\r\n\r\n\tcomponentDidUpdate(){\r\n\t\tconsole.log('My component jsut updated - it rendered!');\r\n\t}\r\n\r\n\trenderContent() {\r\n\t\tif (this.state.errorMessage && !this.state.lat) {\r\n\t\t\treturn <div>Error: {this.state.errorMessage}</div>\r\n\t\t}\r\n\r\n\t\tif (!this.state.errorMessage && this.state.lat){\r\n\t\t\treturn <SeasonDisplay lat={this.state.lat} />\r\n\t\t}\r\n\r\n\t\treturn <Spinner message=\"Please accept location request\"/>;\r\n\t}\r\n\r\n\t\r\n\r\n\t\r\n\trender() {\r\n\t\treturn <div className='border red'>{this.renderContent()}</div>;\r\n\t}\r\n\t\t\r\n}\r\n\r\nReactDOM.render( <App />, document.querySelector('#root') );\r\n\r\n\r\n"],"sourceRoot":""}